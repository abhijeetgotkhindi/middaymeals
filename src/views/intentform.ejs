<!doctype html>
<html lang="en">

<head>
    <%- include('include/header') %>
        <title>Intent Master</title>
</head>

<body>
    <div class="wrapper">
        <%- include('include/sidebar') %>
            <div id="body" class="active">
                <%- include('include/navBar') %>
                    <div class="content">
                        <div class="container">
                            <div class="page-title mb-4">
                                <h3>Intent(s) <button class="btn btn-lg btn-success float-end " data-bs-toggle="modal"
                                        data-bs-target="#edit-modal" id="addnew" onclick="resetdata()"><i
                                            class="fas fa-plus-circle"></i> Add</button>
                                    <!-- onclick="loadForm('intent')" -->
                                </h3>
                            </div>
                            <div class="row">
                                <div class="col-md-12 col-lg-12">
                                    <div class="card">
                                        <!-- <div class="card-header">Basic DataTables Table</div> -->
                                        <div class="card-body">
                                            <p class="card-title"><button class="btn btn-lg btn-warning"
                                                    id="getSelected"><i class="fa fa-tick"></i></button></p>
                                            <ul class="nav nav-tabs" id="statusTabs">
                                                <li class="nav-item"><a class="nav-link active" id="a-tab-All"
                                                        data-bs-toggle="tab" href="#tab-All">All (0)</a></li>
                                                <li class="nav-item"><a class="nav-link" id="a-tab-Created"
                                                        data-bs-toggle="tab" href="#tab-Created">Created (0)</a></li>
                                                <li class="nav-item"><a class="nav-link" id="a-tab-Delivered"
                                                        data-bs-toggle="tab" href="#tab-Delivered">Delivered (0)</a>
                                                </li>
                                                <li class="nav-item"><a class="nav-link" id="a-tab-Received"
                                                        data-bs-toggle="tab" href="#tab-Received">Received (0)</a></li>
                                            </ul>
                                            <div class="tab-content" id="statusTabContent"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <%- include('include/footer') %>
            </div>
    </div>

    <div class="modal fade" id="edit-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg">
            <div class="modal-content">

                <div class="modal-header fs-5" id="editModalLabel">Add/Edit Intent(s)</h1>
                    <button type="button" class="btn-close" onclick="" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="intentform" action="" method="POST" enctype="multipart/form-data">
                        <div class="modal-body">
                            <input type="hidden" id="type" value="POST" />
                            <input type="hidden" id="istatuscode" value="-1" />
                            <input type="hidden" id="oid" name="oid" value="0" />
                            <div class="form-floating mb-3">
                                <input type="date" class="form-control" id="intentfor" name="intentfor"
                                    placeholder="Intent For" style="cursor: pointer;" onchange="getholiday(this.value)">
                                <label for="intentfor">Intent For</label>
                            </div>
                            <div class="form-floating mb-3">
                                <label for="school" style="top: -12px;">School</label>
                                <select id="school" name="school" class=" form-select multiple-select"
                                    readonly></select>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="totalreg" name="totalreg"
                                    placeholder="Total Reg" readonly required>
                                <label for="totalreg">Total Reg</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="totalpresent" name="totalpresent"
                                    placeholder="Total Students Present" required>
                                <label for="totalpresent">Total Students Present</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="milk" name="milk" placeholder="Milk"
                                    required>
                                <label for="milk">Milk</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="rice" name="rice" placeholder="Rice"
                                    required>
                                <label for="rice">Rice</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="sambar" name="sambar" placeholder="Samber"
                                    required>
                                <label for="sambar">Samber</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="egg" name="egg" placeholder="Egg(s)r"
                                    required>
                                <label for="egg">Egg(s)</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="shengachikki" name="shengachikki"
                                    placeholder="Shenga Chikki" required>
                                <label for="shengachikki">Shenga Chikk(s)</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="banana" name="banana" placeholder="Banana"
                                    required>
                                <label for="total">Banana(s)</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="total" name="total" placeholder="Total"
                                    value="0" required>
                                <label for="total">Total</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" id="istatus" name="istatus"
                                    placeholder="Intent Status" value="Pending" readonly>
                                <label for="istatus">Status</label>
                            </div>
                        </div>
                    </form>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-warning" id="draft" onClick="submitData(-1)">Draft</button>
                        <button type="submit" class="btn btn-success" onClick="submitData(1)">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include('include/javascript') %>
        <script>
            $(document).ready(function () {
                getData();
                school(user.school);
                $("#getSelected").hide()
                if (user.usergroup == 1) {
                    $("#addnew").hide()
                }

                $(document).on('click', '.nav-link', function (event) {
                    if ($('#a-tab-All').hasClass('active')) {
                        $('input[type="checkbox"]').prop('disabled', true);
                        $('input[type="checkbox"]').prop('checked', false);
                        $('#getSelected').hide();
                    } else {
                        $('input[type="checkbox"]').prop('disabled', false);
                        $('input[type="checkbox"]').prop('checked', false);
                        $('#getSelected').show();
                        if ($('#a-tab-Created').hasClass('active')) {
                            if (user.usergroup != 2)
                                $('#getSelected').hide();
                            $('#getSelected').html('Delivered');
                            $('#getSelected').attr('onClick', 'updateStatus(2)');
                        }
                        else if ($('#a-tab-Delivered').hasClass('active')) {
                            if (user.usergroup != 3)
                                $('#getSelected').hide();
                            $('#getSelected').html('Received');
                            $('#getSelected').attr('onClick', 'updateStatus(3)');
                        }
                        else
                            $('#getSelected').hide();
                    }
                });

                // Check/Uncheck all rows
                $(document).on('change', '#checkAll', function () {
                    let isChecked = $(this).prop('checked');
                    $('.rowCheckbox').prop('checked', isChecked);
                });

                // // Sync "check all" based on individual checkbox changes
                // $(document).on('change', '.rowCheckbox', function () {
                //     alert();
                //     const total = $('.rowCheckbox').length;
                //     const checked = $('.rowCheckbox:checked').length;
                //     $('#checkAll').prop('checked', total === checked);
                // });

                // $('#getSelected').click(function () {
                //     let selectedIDs = [];
                //     $('.rowCheckbox:checked').each(function () {
                //         selectedIDs.push($(this).val());
                //     });
                //     alert('Selected IDs: ' + selectedIDs.join(', '));
                // });
            });

            const createDatatable = (tableid, data) => {
                $(`#${tableid}-table`).DataTable({
                    destroy: true,
                    data: data,
                    columns: [
                        { title: "", width: "5%" },
                        {
                            title: '',
                            data: null,
                            orderable: false,
                            className: 'select-checkbox',
                            render: function (data, type, row, meta) {
                                return `<input type="checkbox" class="rowCheckbox" value="${row.oid}" data-id="${row.oid}">`;
                            },
                            width: "5%"
                        },
                        { title: "Intent Date", data: "intentfor", width: "10%" },
                        { title: "School", data: "schoolname", width: "15%" },
                        { title: "Total. Reg", data: "totalreg", width: "8%" },
                        { title: "Total Present", data: "totalpresent", width: "8%" },
                        { title: "Milk", data: "milk", width: "6%" },
                        { title: "Rice", data: "rice", width: "6%" },
                        { title: "Sambar", data: "sambar", width: "6%" },
                        { title: "Egg", data: "egg", width: "6%" },
                        { title: "Shenga Chikki", data: "shengachikki", width: "8%" },
                        { title: "Banana", data: "banana", width: "6%" },
                        { title: "Total", data: "total", width: "6%" },
                        {
                            title: "Status", render: function (data, type, row) {
                                let btn = "btn-info";
                                if (row.istatus == "Received")
                                    btn = "btn-success";
                                else if (row.istatus == "Created")
                                    btn = "btn-primary";
                                else if (row.istatus == "Delivered")
                                    btn = "btn-warning";
                                return `<button class="btn ${btn}">` + row.istatus + `</button>`;
                            }, width: "10%"
                        },
                        { title: "Created Time", data: "creationtime", width: "12%" },
                        {
                            title: "Actions", render: function (data, type, row) {
                                return createButton('edit', row, type) + createButton('delete', row);
                            }
                        },
                    ],
                    columnDefs: [{
                        "defaultContent": "",
                        "targets": "_all",
                    }],
                    order: [[2, 'desc']],
                    responsive: true,
                    lengthChange: true,
                    searching: true,
                    ordering: true,
                    language: {
                        emptyTable: "No data available"
                    }
                });

            }

            const createButton = (buttonType, rowID, type) => {
                const buttonValues = buttonType == "edit" ? 'onclick="showedit(' + (JSON.stringify(rowID).replaceAll('"', "'")) + ')" ' : 'onclick="deleteData(' + (rowID.oid) + ')"';
                var buttonText = buttonType == "edit" ? '<i class="fa fa-edit"></i>' : '<i class="fa fa-trash"></i>';
                var buttonClass = buttonType == "edit" ? "btn btn-success" : "btn btn-danger";
                var buttonFn = buttonType == "edit" ? buttonValues.replace(/[\[\]]/g, '') : buttonValues.replace(/[\[\]]/g, '');
                return '<button class="' + buttonClass + ' ' + buttonType + '" ' + buttonFn + ' type="button" >' + buttonText + '</button>&nbsp;&nbsp;';
            }

            const renderGroupedTabs = (responseData) => {
                $('#loader').fadeIn();
                const grouped = groupBy(responseData.intent, 'istatus');
                const statusTabs = document.getElementById("statusTabs");
                const statusTabContent = document.getElementById("statusTabContent");

                // statusTabs.innerHTML = '';
                statusTabContent.innerHTML = '';
                let tabIndex = 0;

                // --- Add "All" tab first ---
                const allTabId = `tab-${'All'}`;
                $("#a-tab-All").html('All (' + (responseData.intent.length) + ')');

                const allTabPane = document.createElement("div");
                allTabPane.className = "tab-pane fade show active";
                allTabPane.id = allTabId;

                allTabPane.innerHTML = `<div class="table-responsive"><table id="${allTabId}-table" class="table table-striped table-bordered display table-hover" style="width:100%"></table></div>`;
                statusTabContent.appendChild(allTabPane);
                // Initialize DataTable for All tab
                createDatatable(allTabId, responseData.intent);

                // --- Add status-specific tabs ---
                Object.keys(grouped).forEach(status => {
                    if (status != 'Draft') {
                        const tabId = `tab-${status}`;

                        const tabPane = document.createElement("div");
                        tabPane.className = "tab-pane fade active";
                        tabPane.id = tabId;
                        tabPane.innerHTML = `<div class="table-responsive"><table id="${tabId}-table" class="table table-striped table-bordered display table-hover" style="width:100%"></table></div>`;
                        statusTabContent.appendChild(tabPane);

                        $("#a-tab-" + status).html(status + ' (' + (grouped[status].length) + ')');
                        createDatatable(tabId, grouped[status])
                    }
                });
                $('input[type="checkbox"]').prop('disabled', true);
                $('#loader').fadeOut();
            }

            const groupBy = (arr, key) => {
                return arr.reduce((acc, obj) => {
                    (acc[obj[key]] = acc[obj[key]] || []).push(obj);
                    return acc;
                }, {});
            }
            // GET request
            const getData = async () => {
                $('#loader').fadeIn();
                try {
                    const response = await apiRequest('get', '/api/intent/' + sessionStorage.getItem("ngocode"));
                    renderGroupedTabs(response.data);
                    $('#loader').fadeOut();
                } catch (error) {
                    toastr.error(error.response.data.message);
                    console.log(error);
                    $('#loader').fadeOut();
                }
            }

            const deleteData = async (oid) => {
                if (confirm("Are you sure you want to delete this item?")) {
                    try {
                        const response = await apiRequest('delete', '/api/intent/' + sessionStorage.getItem('ngocode') + '/delete/', { "oid": oid });
                        getData();
                        $('#loader').fadeOut();
                    } catch (error) {
                        toastr.error(error.response.data.message);
                        console.log(error);
                        $('#loader').fadeOut();
                    }
                }
            }

            const submitData = async (status) => {
                const form = document.querySelector(`#intentform`);
                if (!form.checkValidity()){
                    // Trigger built-in HTML5 validation UI
                    form.reportValidity();
                    return false;
                }
                const formdata = new FormData(form);
                const data = {};
                for (let keyValue of formdata.entries())
                    data[keyValue[0]] = keyValue[1];
                data['createdby'] = user.oid;
                data['istatus'] = status;
                const method = data['oid'] != 0 ? 'put' : 'post';
                const url = data['oid'] != 0 ? '/api/intent/' + sessionStorage.getItem('ngocode') + '/update' : '/api/intent/' + sessionStorage.getItem('ngocode') + '/addnew';
                if (data['oid'] == "" || data['oid'] == 0)
                    delete data['oid'];

                try {
                    const response = await apiRequest(method, url, data);
                    if (response.data.status)
                        toastr.success(response.data.message);
                    $("#edit-modal").modal('hide');
                    getData();
                    $('#loader').fadeOut();
                } catch (error) {
                    toastr.error(error.response.data.message);
                    console.log(error);
                    $('#loader').fadeOut();
                }
                $('#loader').fadeOut();
            }

            const updateStatus = async (status) => {
                let selectedIDs = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedIDs.push($(this).val());
                });
                const data = {};
                data['oid'] = selectedIDs.join(', ');
                data['createdby'] = user.oid;
                data['istatus'] = status;
                const method = 'put';
                const url = '/api/intent/' + sessionStorage.getItem('ngocode') + '/updatestatus';

                try {
                    const response = await apiRequest(method, url, data);
                    if (response.data.status)
                        toastr.success(response.data.message);
                    window.location.reload();
                    // $("#a-tab-All").trigger('click');
                    // getData();
                    $('#loader').fadeOut();
                } catch (error) {
                    toastr.error(error.response.data.message);
                    console.log(error);
                    $('#loader').fadeOut();
                }

                $('#loader').fadeOut();
            }

            const getholiday = async (val) => {
                const datePicker = document.getElementById("intentfor");
                const holidayss = await holiday();
                const holidaysArray = holidayss.map(item => item.holidays);
                const holidays = holidaysArray;
                // Disable weekends and holidays
                const selectedDate = new Date(val);
                const day = selectedDate.getUTCDay(); // 0 (Sun) - 6 (Sat)
                // Check if weekend
                const isWeekend = (day === 0 || day === 6);
                // Check if holiday
                const isHoliday = holidays.includes(val);
                if (isWeekend || isHoliday) {
                    alert("Weekends and holidays are not selectable.");
                    datePicker.value = ""; // Reset the input
                }
            }


            const resetdata = () => {
                $('#loader').fadeIn();
                $("input").val("");
                const holidays = ['2025-06-03', '2025-06-02']; // Example holidays
                const defaultDate = getNextBusinessDay(holidays, true/*excludeWeekends*/); // allow weekends
                document.getElementById('intentfor').value = defaultDate;
                $("#oid").val("0");
                $("#district").multipleSelect('uncheckAll');
                $("#taluka").multipleSelect('uncheckAll');
                $("#village").multipleSelect('uncheckAll');
                $("#ngo").multipleSelect('uncheckAll');
                $("#createdby").val(user.oid);
                $('#loader').fadeOut();
            }


        </script>
</body>

</html>