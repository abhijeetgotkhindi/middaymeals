<div class="d-flex" style="background-color: white;">
    <nav id="sidebar">
        <div class="sidebar-header">
            <img src="../../public/img/logo.png" alt="bootraper logo" class="app-logo">
        </div>
        <hr class="horizontal dark mt-2 mb-2"
            style="background-image: linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.4), transparent);">
        <ul class="list-unstyled components text-secondary" id="dynamicSidebarMenu">
            <li style="padding: 0 20px 0 20px;" id="ngoselection">
                <button id="ngomain" class="btn btn-info col-md-12" onclick="dashboardNgo()">Select NGO</button>
            </li>
            <hr>
            <div class="dropdown-divider"></div>
        </ul>
    </nav>
</div>
<script type="text/javascript">
    const getMenu = async () => {
        try {
            const result = await axios.get('<%= appurl %>/api/menu/' + user.usergroup, // Replace with your API endpoint
                {
                    withCredentials: true, // Very important for cookies to be accepted
                    headers: {
                        'Content-Type': 'application/json',
                        "authorization": "Bearer: " + sessionStorage.getItem("token")
                    },
                }
            );

            if (result.data.success) {
                const menuData = result.data.menu;
                if (menuData.length === 0)
                    return false;
                const sidebarMenu = document.getElementById('dynamicSidebarMenu');
                menuData.forEach((item, index) => {
                    const li = document.createElement('li');
                    // Check for submenu
                    if (item.submenu) {
                        const submenuId = `submenu-${index}`;
                        li.innerHTML = `<a href="#${submenuId}" data-bs-toggle="collapse" aria-expanded="false" class="dropdown-toggle no-caret-down"><i class="${item.icon}"></i> ${item.title}<i class="fas fa-angle-left" style="float: right;"></i></a><ul class="collapse list-unstyled" id="${submenuId}"></ul>`;
                        const submenuUl = li.querySelector('ul');
                        const filenames = item.submenufilename.split(',');
                        const titles = item.submenutitle.split(',');
                        const icons = item.submenuicon.split(',');

                        titles.forEach((title, i) => {
                            const subLi = document.createElement('li');
                            subLi.innerHTML = `<a href="${filenames[i].replace(".php", "")}"><i class="${icons[i]}"></i> ${title}</a>`;
                            submenuUl.appendChild(subLi);
                        });

                    } else {
                        li.innerHTML = `<a href="${item.filename.replace(".php", "")}"><i class="${item.icon}"></i> ${item.title}</a>`;
                    }
                    sidebarMenu.appendChild(li);
                });
                // Call it after menu is rendered
                setActiveMenu();
            }
            else {
                if (result.data.code === 400);
                window.location.href = '/logout';
            }
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    }
    getMenu();

    const setActiveMenu = async () => {
        const currentPath = window.location.pathname.split('/').pop();
        // Find all sidebar links
        const links = document.querySelectorAll('#sidebar a');
        links.forEach(link => {
            const href = link.getAttribute('href');
            if (href && href !== '#' && href === currentPath) {
                link.classList.add('active');

                // Also expand parent submenu if present
                const parentCollapse = link.closest('.collapse');
                if (parentCollapse) {
                    parentCollapse.classList.add('show');

                    const parentToggle = document.querySelector(`a[href="#${parentCollapse.id}"]`);
                    if (parentToggle) {
                        parentToggle.setAttribute('aria-expanded', 'true');
                    }
                }
            }
        });
    }

</script>